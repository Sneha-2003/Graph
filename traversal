BFS traversal::
class Solution {
    // Function to return Breadth First Traversal of given graph.
    public ArrayList<Integer> bfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        ArrayList<Integer> bfs=new ArrayList<Integer>();
        
        int vis[]=new int[V];
        
        Queue<Integer> q=new LinkedList<Integer>();
        
        q.add(0);
        vis[0]=1;
        bfs.add(0);
        
        while(!q.isEmpty())
        {
            Integer val=q.poll();
            
            for(Integer v:adj.get(val))
            {
                if(vis[v]==0)
                {
                    vis[v]=1;
                    q.add(v);
                    bfs.add(v);
                }
            }
        }
        
        return bfs;
        
    }
}


o/p::
V = 3, E = 2
adj = {{1,2},{},{}}

Output: 
0 1 2
------------------------------------------------------------------------------------------------------------------------------------------------------

DFS traversal::
